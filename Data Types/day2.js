// Data types can be divided into two:
// Primitive data types
// Non-primitive data types(Object References)


// Primitive data types in JavaScript include:
// Numbers - Integers, floats
// Strings - Any data under single quote, double quote or backtick quote
// Booleans - true or false value
// Null - empty value or no value
// Undefined - a declared variable without a value
// Symbol - A unique value that can be generated by Symbol constructor

// Non-primitive data types in JavaScript includes:
// Objects
// Arrays

//NB: You can't modify strings
// let word = 'JavaScript'
// word[0] = 'y'
// console.log(word);

// let numOne = 3
// let numTwo = 3

// console.log(numOne == numTwo);

// let js = 'JavaScript'
// let py = 'Python'

// console.log(js == py);


// Non-Primitive Data Types
// Non-primitive data types are modifiable or mutable. We can modify the value of non-primitive data types after it gets created. Let us see by creating an array. An array is a list of data values in a square bracket. 

// let nums = [1, 2, 3]
// nums[0] = 10
// console.log(nums);

// let numbers = [10,2, 3]
// let num = [4, 5, 6]
// console.log(numbers == num);


// let userOne ={
//     name: "Ashley",
//     role:"teaching",
//     country: "Finland"
// }
// let userTwo = {
//     name: "John",
//     role: "student",
//     country: "Sudan"
// }
// console.log(userOne == userTwo);


// let userThree = userTwo
// console.log(userThree == userTwo);

//Declaring Number Data Types
// let age = 35
// const gravity = 9.81 //const for non changing values / facts
// let mass = 72
// const boilingPoint = 100
// console.log(age, gravity, mass, boilingPoint);

// Math Object
// const PI = Math.PI
// console.log(PI);

// console.log(Math.round(PI)); //round values to the nearest number
// console.log(Math.round(9.81));

// console.log(Math.floor(PI)); // rounding down
// console.log(Math.floor(9.81));

// console.log(Math.ceil(PI));// rounding up
// console.log(Math.ceil(9.81));

// console.log(Math.min(-5, 3, 20, 4, 5, 10)); //returns minimum value
// console.log(Math.max(-5, 3, 20, 4, 5, 10)); //returns maximum value

// const randNum = Math.random() //creates random number between 0 to 0.999999
// console.log(randNum);

// const numb = Math.floor(Math.random() * 11) //creates random number between 0 and 10
// console.log(numb);

// console.log(Math.abs(-10)); //Absolute value

// console.log(Math.sqrt(100)); //Square root

// console.log(Math.pow(3, 2)); //power 

// console.log(Math.E);

//Logarithm
//Returns the natural Logarithm with base E of x, Math.log(x)
// console.log(Math.LN2);
// console.log(Math.LN10);

//Trigonometry
// Math.sin(0)
// Math.sin(60)

// Math.cos(0)
// Math.cos(60)

// Random Number Generator
//Generate a number between 0 and 10

// let randomNum = Math.random()
// let numBtnZeroAndTen = Math.floor(randomNum * 11)
// console.log(numBtnZeroAndTen);

// String Concatenation
// let space = ' '
// let firstName = 'John'
// let lastName = 'Doe'
// let age = 28
// country = 'Sudan'

// let person = firstName + space + lastName + space + age
// console.log(person);

// let person = firstName + '. I am' + age + '. I live in' + country;
// console.log(person);

// Long Literal Strings
// const paragraph = "My name is Jane Doe \
// I live in Earth\ and I teach code"
// console.log(paragraph);

// Escape Sequences in Strings
// In JavaScript and other programming languages \ followed by some characters is an escape sequence. Let's see the most common escape characters:
// \n: new line
// \t: Tab, means 8 spaces
// \\: Back slash
// \': Single quote (')
// \": Double quote (")

// console.log('This is 30 days of JavaScript \n I hope you enjoy it');
// console.log('Day 1\t3\t5');
// console.log('This is a backslash symbol(\\)');
// console.log('Single quote is like this \'hello, world\'');
// console.log('Double quotes is like this \"Hi, again\"');

// Template Literals (Template Strings)
// console.log(`The sum of 2 and 3 is 5`);
// let a = 3
// let b = 2
// console.log(`The sum of ${a} and ${b} is ${a + b}`);

// let firstName = 'Asabeneh'
// let lastName = 'Yetayeh'
// let country = 'Finland'
// let city = 'Helsinki'
// let language = 'JavaScript'
// let job = 'teacher'
// let age = 25
// let fullName = firstName + ' ' + lastName

// let personA = `I am ${firstName}. I am ${age}. I live in ${country}`;
// let personB = `I am ${fullName}. I live in ${country} ${city}. I am a ${job}`;
// console.log(personA);
// console.log(personB);

//Comparisons
// let a = 2
// let b = 3
// console.log(`${a} is greater than ${b} : ${a > b}`);

// String Methods
// let js = 'JavaScript'
// console.log(js.length);

// let firstLetter = js[0]
// console.log(firstLetter);

// let lastIndex = js.length -1
// console.log(lastIndex);
// console.log(js[lastIndex]);

// toUpperCase(): this method changes the string to uppercase letters.
// let string = 'javascript'
// console.log(string.toUpperCase());

// toLowerCase(): this method changes the string to lowercase letters.
// let Lname = 'Bethany'
// console.log(Lname.toLowerCase());

// substr(): It takes two arguments, the starting index and number of characters to slice.
// let string = 'JavaScript'
// console.log(string.substr(4,6));
// let country = 'Finland'
// console.log(country.substr(3,4));

// substring(): It takes two arguments, the starting index and the stopping index but it doesn't include the character at the stopping index.
// let string = 'JavaScript'
// console.log(string.substring(0,4));
// console.log(string.substring(4,10));
// console.log(string.substring(4));

// let country = 'Finland'
// console.log(country.substring(0,3));
// console.log(country.substring(3,7));
// console.log(country.substring(3));

// split(): The split method splits a string at a specified place.
// let string = '30 Days of Javascript'
// console.log(string.split()); //Changes to an array
// console.log(string.split(' ')); //Split to an array at space 

// trim(): Removes trailing space in the beginning or the end of a string.
// let firstName = '  JaneDoe  '
// console.log(firstName);
// console.log(firstName.trim());

// includes(): It takes a substring argument and it checks if substring argument exists in the string. includes() returns a boolean. If a substring exist in a string, it returns true, otherwise it returns false.
// let string = '30 Days of Javascript';
// console.log(string.includes('Days'));
// console.log(string.includes('days'));
// console.log(string.includes('of'));

// replace(): takes as a parameter the old substring and a new substring.
// let string = '30 Days of JavaScript'
// console.log(string.replace('JavaScript', 'Python'));

// charAt(): Takes index and it returns the value at that index
// let string = '30 Days of JavaScript'
// console.log(string.charAt(0));

// let lastIndex = string.length -1
// console.log(string.charAt(lastIndex));

// charCodeAt(): Takes index and it returns char code (ASCII number) of the value at that index
// let string ='30 Days of JavaScript'
// console.log(string.charCodeAt(3));

// let lastIndex = string.length -1
// console.log(string.charCodeAt(lastIndex));

// indexOf(): Takes a substring and if the substring exists in a string it returns the first position of the substring if does not exist it returns -1
// let string = '30 Days of JavaScript'
// console.log(string.indexOf('D'));
// console.log(string.indexOf('Days'));
// console.log(string.indexOf('days'));
// console.log(string.indexOf('Script'));

// lastIndexOf(): Takes a substring and if the substring exists in a string it returns the last position of the substring if it does not exist it returns -1
// let string = 'I love JavaScript. If you do not love JavaScript what else can you love.'
// console.log(string.lastIndexOf('love'));

// concat(): it takes many substrings and joins them.
// let string = '30'
// console.log(string.concat("Days", "Of", "Javascript"));

// let country = 'Fin';
// console.log(country.concat("land"));

// startsWith: it takes a substring as an argument and it checks if the string starts with that specified substring. It returns a boolean(true or false).
// let string = 'Love is the best to in this world'
// console.log(string.startsWith('Love'));
// console.log(string.startsWith('love'));

// endsWith: it takes a substring as an argument and it checks if the string ends with that specified substring. It returns a boolean(true or false).
// let string = 'Love is the most powerful feeling in the world'
// console.log(string.endsWith('world'));
// console.log(string.endsWith('love'));

// search: it takes a substring as an argument and it returns the index of the first match. The search value can be a string or a regular expression pattern.
// let string = 'I love JavaScript. If you do not love JavaScript what else can you love.'
// console.log(string.search('love'));
// console.log(string.search(/javascript/gi)); // g-means to search in the whole text, i - case insensitive

// match: it takes a substring or regular expression pattern as an argument and it returns an array if there is match if not it returns null. Let us see how a regular expression pattern looks like. It starts with / sign and ends with / sign.
// let string = 'love'
// let patternOne = /love/  //without any flag
// let patternTwo = /love/gi

// let string = 'I love JavaScript. If you do not love JavaScript what else can you love.'
// console.log(string.match('love'));

// let pattern = /love/gi
// console.log(string.match(pattern));

// let txt = 'In 2019, I ran 30 Days of Python. Now, in 2020 I am super exited to start this challenge'
// let regEx = /\d+/

// d with escape character means d not a normal d instead acts a digit
// + means one or more digit numbers,
// if there is g after that it means global, search everywhere.

// console.log(txt.match(regEx));
// console.log(txt.match(/\d+/g));

// repeat(): it takes a number as argument and it returns the repeated version of the string.
// let string = 'love'
// console.log(string.repeat(10));


// Checking Data Types and Casting
// To check the data type of a certain variable we use the typeof method.

// let firstName = 'Jane'
// let lastName = 'Doe'
// let country = 'Finland'
// let city = 'Helsinki'
// let age = 25
// let job

// console.log(typeof firstName);
// console.log(typeof country);
// console.log(typeof age);
// console.log(typeof job);
// console.log(typeof NaN);
// console.log(typeof undefined);
// console.log(typeof null);
// console.log(typeof false);

// Changing Data Type (Casting)
// Casting: Converting one data type to another data type. We use parseInt(), parseFloat(), Number(), + sign, str() When we do arithmetic operations string numbers should be first converted to integer or float if not it returns an error.

// String to Int
// We can convert string to number using the following methods:
// parseInt()
// Number()
// Plus sign(+)

// let num = '10'
// let numInt = parseInt(num)
// console.log(numInt);

// let num = '10'
// let numInt = Number(num)
// console.log(numInt);

// let num = '10'
// let numInt = +num
// console.log(numInt);

// String to Float
// We can convert string float to number using the following methods:
// parseFloat()
// Number()
// Plus sign(+)

// let num = '9.81'
// let numFloat = parseFloat(num)
// console.log(numFloat);

// let num = '9.81'
// let numFloat = Number(num)
// console.log(numFloat);

// let num = '9.81'
// let numFloat = +num
// console.log(numFloat);

// Float to Int
// We can convert float numbers to integers. We use the following method to convert float to int:
// parseInt()

// let num = 9.81
// let numInt = parseInt(num)
// console.log(numInt);

// 💻 Day 2: Exercises
// Exercise: Level 1
// Declare a variable named challenge and assign it to an initial value '30 Days Of JavaScript'
challenge = '30 Days of JavaScript'

// Print the string on the browser console using console.log()
console.log(challenge);

// Print the length of the string on the browser console using console.log()
console.log(challenge.length);

// Change all the string characters to capital letters using toUpperCase() method
console.log(challenge.toUpperCase());

// Change all the string characters to lowercase letters using toLowerCase() method
console.log(challenge.toLowerCase());

// Cut (slice) out the first word of the string using substr() or substring() method
console.log(challenge.substr(0));
console.log(challenge.substring(0));

// Slice out the phrase Days Of JavaScript from 30 Days Of JavaScript.
let string = '30 Days Of JavaScript'
console.log(string.substr(3,18));

// Check if the string contains a word Script using includes() method
console.log(string.includes('Script'));

// Split the string into an array using split() method
console.log(string.split());

// Split the string 30 Days Of JavaScript at the space using split() method
console.log(string.split(' '));

// 'Facebook, Google, Microsoft, Apple, IBM, Oracle, Amazon' split the string at the comma and change it to an array.
company = 'Facebook, Google, Microsoft, Apple, IBM, Oracle, Amazon'
console.log(company.split());

// Change 30 Days Of JavaScript to 30 Days Of Python using replace() method.
word = '30 Days Of JavaScript'
console.log(word.replace('JavaScript', 'Python'));

// What is character at index 15 in '30 Days Of JavaScript' string? Use charAt() method.
console.log(word.charAt(15));

// What is the character code of J in '30 Days Of JavaScript' string using charCodeAt()
console.log(word.charCodeAt(11));

// Use indexOf to determine the position of the first occurrence of a in 30 Days Of JavaScript
console.log(word.indexOf('a'));

// Use lastIndexOf to determine the position of the last occurrence of a in 30 Days Of JavaScript.
console.log(word.lastIndexOf('a'));

// Use indexOf to find the position of the first occurrence of the word because in the following sentence:'You cannot end a sentence with because because because is a conjunction'
post = 'You cannot end a sentence with because because because is a conjunction'
console.log(post.indexOf('because'));

// Use lastIndexOf to find the position of the last occurrence of the word because in the following sentence:'You cannot end a sentence with because because because is a conjunction'
console.log(post.lastIndexOf('because'));

// Use search to find the position of the first occurrence of the word because in the following sentence:'You cannot end a sentence with because because because is a conjunction'
console.log(post.search('because'));

// Use trim() to remove any trailing whitespace at the beginning and the end of a string.E.g ' 30 Days Of JavaScript '.
day = ' 30 Days Of JavaScript ';
console.log(day.trim());

// Use startsWith() method with the string 30 Days Of JavaScript and make the result true
days = ' 30 Days Of JavaScript ';
console.log(days.startsWith(30));

// Use endsWith() method with the string 30 Days Of JavaScript and make the result true
console.log(days.endsWith('JavaScript'));

// Use match() method to find all the a’s in 30 Days Of JavaScript
console.log(days.match('a'))

// Use concat() and merge '30 Days of' and 'JavaScript' to a single string, '30 Days Of JavaScript'
let jav = '30 Days of'
console.log(jav.concat('JavaScript'));

// Use repeat() method to print 30 Days Of JavaScript 2 times
console.log(days.repeat(2));


// Exercise: Level 2
// Using console.log() print out the following statement:
// The quote 'There is no exercise better for the heart than reaching down and lifting people up.' by John Holmes teaches us to help one another.
console.log('There is no exercise better for the heart than reaching down and lifting people up. by John Holmes teaches us to help one another.');

// Using console.log() print out the following quote by Mother Teresa:
// "Love is not patronizing and charity isn't about pity, it is about love. Charity and love are the same -- with charity you give love, so don't just give money but reach out your hand instead."
console.log("Love is not patronizing and charity isn't about pity, it is about love. Charity and love are the same -- with charity you give love, so don't just give money but reach out your hand instead.");

// Check if typeof '10' is exactly equal to 10. If not make it exactly equal.
console.log(typeof '10' == 10);

num = '10'
numInt = parseInt(10)
console.log(numInt);
console.log(typeof numInt === typeof 10);

// Check if parseFloat('9.8') is equal to 10 if not make it exactly equal with 10.
numm = '9.8'
nummFloat = parseFloat(numm)
console.log(nummFloat);
console.log(typeof nummFloat == typeof 10);

// Check if 'on' is found in both python and jargon
word = 'python and jargon'
console.log(word.match('on'));

// I hope this course is not full of jargon. Check if jargon is in the sentence.
sent = ' I hope this course is not full of jargon.'
console.log(sent.match('jargon'));

// Generate a random number between 0 and 100 inclusively.
let N = 100
nuum = Math.random() * N
console.log(nuum);

// Generate a random number between 50 and 100 inclusively.
const min = 50;
const max = 100;

a = Math.floor(Math.random() * (max - min + 1) + min)
console.log(`Random number between ${min} and ${max} is ${a}`);

// Generate a random number between 0 and 255 inclusively.

let P = 255
rand = Math.floor(Math.random() * P)
console.log(rand);

// Access the 'JavaScript' string characters using a random number.
const text = 'JavaScript'
const result = Math.floor(Math.random() * text.length)
randChar = text[result]
console.log(`Random Index = ${result}`);
console.log(`Random Character = ${randChar}`);


// Use console.log() and escape characters to print the following pattern.
// 1 1 1 1 1
// 2 1 2 4 8
// 3 1 3 9 27
// 4 1 4 16 64
// 5 1 5 25 125

console.log( "1  1  1  1 \n  2  1  2  4  8 \n  3  1  3  9  27 \n 4  1  4  16  64 \n 5  1  5  25  125");

// Use substr to slice out the phrase because because because from the following sentence:'You cannot end a sentence with because because because is a conjunction'
sent = 'You cannot end a sentence with because because because is a conjunction'
console.log(sent.substr(sent.indexOf('because'), ('because'.length * 3) + 2));

// Exercises: Level 3
// 'Love is the best thing in this world. Some found their love and some are still looking for their love.' Count the number of word love in this sentence.
love = 'Love is the best thing in this world. Some found their love and some are still looking for their love.'
pattern = /love/gi
console.log(love.match(pattern));

// Use match() to count the number of all because in the following sentence:'You cannot end a sentence with because because because is a conjunction'
all = 'You cannot end a sentence with because because because is a conjunction'
pat = /because/gi
console.log(all.match(pat));

// Clean the following text and find the most frequent word (hint, use replace and regular expressions)'
const sentence = '%I $am@% a %tea@cher%, &and& I lo%#ve %te@a@ching%;. The@re $is no@th@ing; &as& mo@re rewarding as educa@ting &and& @emp%o@weri@ng peo@ple. ;I found tea@ching m%o@re interesting tha@n any ot#her %jo@bs. %Do@es thi%s mo@tiv#ate yo@u to be a tea@cher!? %Th#is 30#Days&OfJavaScript &is al@so $the $resu@lt of &love& of tea&ching'

cleaned = sentence.replace(/[^\w\s]/g, '').replace(/\s+/g, ' ');
console.log(cleaned);


// Calculate the total annual income of the person by extracting the numbers from the following text. 'He earns 5000 euro from salary per month, 10000 euro annual bonus, 15000 euro online courses per month.'
income = 'He earns 5000 euro from salary per month, 10000 euro annual bonus, 15000 euro online courses per month.'
regEx = /\d+/g
console.log(income.match(regEx));